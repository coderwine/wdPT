/*!  GENERAL SETUP */

html, body {
    /* background-color: red;*/ 
    /* ^^ just for connection testing */
    margin: 0;
    padding: 0;
}

html {
    font-size: 10px;
    background: linear-gradient(133deg, 
        rgba(235,217,181,1) 20%,
        rgba(236,105,165,1) 50%, 
        rgba(89,232,247,1) 100%);
}

body {
    width: 80vw;
    min-width: 800px;
    margin: 0 auto;
    height: 100vh;
}

/*! TYPOGRAPHY */

/* ? We want to target our header tags, like h1 and h2, and make them uniform */
h1, h2 {
    font-family: 'Raleway', sans-serif;
    color: #2a2a2a;
}

/* p, input, li { */
p, li {
    font-family: 'Roboto Condensed', sans-serif;
    color: #2a2a2a;
}

h1 {
    font-size: 4rem;
    /* REMs are a way of setting font-size based on the font-size of the root HTML element.  They also allow you to quickly scale an entire project by changing the root font-size */
    /*? REM is a way for us to take the base size of an elements root value and re-size based off that exact element.  Ex: 1rem = 16px (which is the default font size of most browsers)
        - 1rem = 100% font size of the root element.
        - in this case: 4rem = 4x h1
    */
    text-align: center;
    text-shadow: 2px 2px 10px black;
}

h2 {
    font-size: 3rem;
    text-align: center;
}

p, li {
    font-size: 1.6rem;
    line-height: 1.5;;
}

/*! HEADER LAYOUT */

header {
    /* margin: 0 0 10px 0; */
    margin-bottom: 10px;
    /* *Show Inspector as these margins are moving */
}

/*? Lets target our divs and give them a uniform design */
main, header, nav, article, aside, footer, section {
    background-color: rgba(255,255,255,.05);
    padding: 1%;
    /*
    ? What's another way that we could have targeted all of these divs as one item?
        - set classes in our HTML
    */
}

h1 {
    text-transform: uppercase;
}

nav {
    height: 50px;
    /* *show inspector and how the box is shown vs where the text is laying out */
}

nav ul {
    display: flex;
}
    /*  
    ? Why use commas between some elements and not others?
        - Commas state that we want to style "this" element AND "that" element.
        - No commas states that we want to style "this" element WITHIN "that" element (and not to style "that" as well).
    */

nav li {
    list-style-type: none;
    text-align: center;
    flex: 1;
    /* 
    ? The flex property is a shorthand property for flex-grow, flex-shrink, and flex-basis properties.  These properties determine how the element will respond to the rest of the flexible items within the same container as the nav ul is set to display flex.
        flex is shorthand for:
            - flex-grow
                - specifies how much the item will grow
                - 1 unitless value (ie: the number 1 here)
            - flex-shrink
                - specifies how much the item will shrink
                - 2 unitless values (not shown)
            - flex-basis
                - specifies initial length of a flexible item
                - One value w/ unit
            - nav li will take up 100% of the container width.
    ? This particular item is responding to what our current viewport is showing and resizing it as needed.
    * show inspect tool and how it is repsonding between 0 and 1 on flex

    */
}

nav a, nav span {
    font-size: 2rem;
    height: 3rem;
    text-transform: uppercase;
    text-decoration: none;
    color: black;
}

/*! MAIN LAYOUT */

main {
    display: flex;
}

section, article {
    flex: 4;
    /* 
        ? Section and article will take up 80% of the viewport (4/(4+1) or 4 items on 1 
        - 4 = 80% of the container (4/4+1)
    */
}

aside {
    flex: 1;
    /* 1 = 20% of the container (1/1+4) */
    margin-left: 10px;
    padding: 1%;
}

aside a {
    float: left;
    width: 50%;
}

aside img {
    max-width: 100%;
}

footer {
    margin-top: 10px;
}